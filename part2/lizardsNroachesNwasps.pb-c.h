/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: lizardsNroachesNwasps.proto */

#ifndef PROTOBUF_C_lizardsNroachesNwasps_2eproto__INCLUDED
#define PROTOBUF_C_lizardsNroachesNwasps_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _LizardConnectResp LizardConnectResp;
typedef struct _LizardMovementReq LizardMovementReq;
typedef struct _LizardMovementResp LizardMovementResp;
typedef struct _RoachesConnectReq RoachesConnectReq;
typedef struct _RoachesConnectResp RoachesConnectResp;
typedef struct _RoachesMovementReq RoachesMovementReq;
typedef struct _RoachesMovementResp RoachesMovementResp;
typedef struct _WaspsConnectReq WaspsConnectReq;
typedef struct _WaspsConnectResp WaspsConnectResp;
typedef struct _WaspsMovementReq WaspsMovementReq;
typedef struct _WaspsMovementResp WaspsMovementResp;
typedef struct _LizardDisconnectReq LizardDisconnectReq;
typedef struct _LizardDisconnectResp LizardDisconnectResp;
typedef struct _RoachesDisconnectReq RoachesDisconnectReq;
typedef struct _RoachesDisconnectResp RoachesDisconnectResp;
typedef struct _WaspsDisconnectReq WaspsDisconnectReq;
typedef struct _WaspsDisconnectResp WaspsDisconnectResp;
typedef struct _FieldUpdate FieldUpdate;


/* --- enums --- */

typedef enum _ResponseType {
  RESPONSE_TYPE__RESPONSE_SUCCESS = 0,
  RESPONSE_TYPE__RESPONSE_FAIL = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(RESPONSE_TYPE)
} ResponseType;
typedef enum _Direction {
  DIRECTION__LEFT = 0,
  DIRECTION__RIGHT = 1,
  DIRECTION__UP = 2,
  DIRECTION__DOWN = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(DIRECTION)
} Direction;

/* --- messages --- */

struct  _LizardConnectResp
{
  ProtobufCMessage base;
  ResponseType response_type;
  ProtobufCBinaryData character;
  int32_t nonce;
};
#define LIZARD_CONNECT_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lizard_connect_resp__descriptor) \
    , RESPONSE_TYPE__RESPONSE_SUCCESS, {0,NULL}, 0 }


struct  _LizardMovementReq
{
  ProtobufCMessage base;
  ProtobufCBinaryData character;
  Direction direction;
  int32_t nonce;
};
#define LIZARD_MOVEMENT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lizard_movement_req__descriptor) \
    , {0,NULL}, DIRECTION__LEFT, 0 }


struct  _LizardMovementResp
{
  ProtobufCMessage base;
  ResponseType response_type;
  int32_t score;
  int32_t new_nonce;
};
#define LIZARD_MOVEMENT_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lizard_movement_resp__descriptor) \
    , RESPONSE_TYPE__RESPONSE_SUCCESS, 0, 0 }


struct  _RoachesConnectReq
{
  ProtobufCMessage base;
  int32_t number;
  size_t n_scores;
  int32_t *scores;
};
#define ROACHES_CONNECT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&roaches_connect_req__descriptor) \
    , 0, 0,NULL }


struct  _RoachesConnectResp
{
  ProtobufCMessage base;
  ResponseType response_type;
  size_t n_characters;
  int32_t *characters;
  size_t n_nonces;
  int32_t *nonces;
};
#define ROACHES_CONNECT_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&roaches_connect_resp__descriptor) \
    , RESPONSE_TYPE__RESPONSE_SUCCESS, 0,NULL, 0,NULL }


struct  _RoachesMovementReq
{
  ProtobufCMessage base;
  int32_t character;
  Direction direction;
  int32_t nonce;
};
#define ROACHES_MOVEMENT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&roaches_movement_req__descriptor) \
    , 0, DIRECTION__LEFT, 0 }


struct  _RoachesMovementResp
{
  ProtobufCMessage base;
  ResponseType response_type;
  int32_t new_nonce;
};
#define ROACHES_MOVEMENT_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&roaches_movement_resp__descriptor) \
    , RESPONSE_TYPE__RESPONSE_SUCCESS, 0 }


struct  _WaspsConnectReq
{
  ProtobufCMessage base;
  int32_t number;
};
#define WASPS_CONNECT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&wasps_connect_req__descriptor) \
    , 0 }


struct  _WaspsConnectResp
{
  ProtobufCMessage base;
  ResponseType response_type;
  size_t n_characters;
  int32_t *characters;
  size_t n_nonces;
  int32_t *nonces;
};
#define WASPS_CONNECT_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&wasps_connect_resp__descriptor) \
    , RESPONSE_TYPE__RESPONSE_SUCCESS, 0,NULL, 0,NULL }


struct  _WaspsMovementReq
{
  ProtobufCMessage base;
  int32_t character;
  Direction direction;
  int32_t nonce;
};
#define WASPS_MOVEMENT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&wasps_movement_req__descriptor) \
    , 0, DIRECTION__LEFT, 0 }


struct  _WaspsMovementResp
{
  ProtobufCMessage base;
  ResponseType response_type;
  int32_t new_nonce;
};
#define WASPS_MOVEMENT_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&wasps_movement_resp__descriptor) \
    , RESPONSE_TYPE__RESPONSE_SUCCESS, 0 }


struct  _LizardDisconnectReq
{
  ProtobufCMessage base;
  ProtobufCBinaryData character;
  int32_t nonce;
};
#define LIZARD_DISCONNECT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lizard_disconnect_req__descriptor) \
    , {0,NULL}, 0 }


struct  _LizardDisconnectResp
{
  ProtobufCMessage base;
  ResponseType response_type;
};
#define LIZARD_DISCONNECT_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lizard_disconnect_resp__descriptor) \
    , RESPONSE_TYPE__RESPONSE_SUCCESS }


struct  _RoachesDisconnectReq
{
  ProtobufCMessage base;
  size_t n_ids;
  int32_t *ids;
  size_t n_nonces;
  int32_t *nonces;
  int32_t number;
};
#define ROACHES_DISCONNECT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&roaches_disconnect_req__descriptor) \
    , 0,NULL, 0,NULL, 0 }


struct  _RoachesDisconnectResp
{
  ProtobufCMessage base;
  ResponseType response_type;
};
#define ROACHES_DISCONNECT_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&roaches_disconnect_resp__descriptor) \
    , RESPONSE_TYPE__RESPONSE_SUCCESS }


struct  _WaspsDisconnectReq
{
  ProtobufCMessage base;
  size_t n_ids;
  int32_t *ids;
  size_t n_nonces;
  int32_t *nonces;
  int32_t number;
};
#define WASPS_DISCONNECT_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&wasps_disconnect_req__descriptor) \
    , 0,NULL, 0,NULL, 0 }


struct  _WaspsDisconnectResp
{
  ProtobufCMessage base;
  ResponseType response_type;
};
#define WASPS_DISCONNECT_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&wasps_disconnect_resp__descriptor) \
    , RESPONSE_TYPE__RESPONSE_SUCCESS }


struct  _FieldUpdate
{
  ProtobufCMessage base;
  uint32_t x;
  uint32_t y;
  ProtobufCBinaryData character;
  protobuf_c_boolean has_id;
  ProtobufCBinaryData id;
  protobuf_c_boolean has_new_score;
  int32_t new_score;
};
#define FIELD_UPDATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&field_update__descriptor) \
    , 0, 0, {0,NULL}, 0, {0,NULL}, 0, 0 }


/* LizardConnectResp methods */
void   lizard_connect_resp__init
                     (LizardConnectResp         *message);
size_t lizard_connect_resp__get_packed_size
                     (const LizardConnectResp   *message);
size_t lizard_connect_resp__pack
                     (const LizardConnectResp   *message,
                      uint8_t             *out);
size_t lizard_connect_resp__pack_to_buffer
                     (const LizardConnectResp   *message,
                      ProtobufCBuffer     *buffer);
LizardConnectResp *
       lizard_connect_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lizard_connect_resp__free_unpacked
                     (LizardConnectResp *message,
                      ProtobufCAllocator *allocator);
/* LizardMovementReq methods */
void   lizard_movement_req__init
                     (LizardMovementReq         *message);
size_t lizard_movement_req__get_packed_size
                     (const LizardMovementReq   *message);
size_t lizard_movement_req__pack
                     (const LizardMovementReq   *message,
                      uint8_t             *out);
size_t lizard_movement_req__pack_to_buffer
                     (const LizardMovementReq   *message,
                      ProtobufCBuffer     *buffer);
LizardMovementReq *
       lizard_movement_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lizard_movement_req__free_unpacked
                     (LizardMovementReq *message,
                      ProtobufCAllocator *allocator);
/* LizardMovementResp methods */
void   lizard_movement_resp__init
                     (LizardMovementResp         *message);
size_t lizard_movement_resp__get_packed_size
                     (const LizardMovementResp   *message);
size_t lizard_movement_resp__pack
                     (const LizardMovementResp   *message,
                      uint8_t             *out);
size_t lizard_movement_resp__pack_to_buffer
                     (const LizardMovementResp   *message,
                      ProtobufCBuffer     *buffer);
LizardMovementResp *
       lizard_movement_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lizard_movement_resp__free_unpacked
                     (LizardMovementResp *message,
                      ProtobufCAllocator *allocator);
/* RoachesConnectReq methods */
void   roaches_connect_req__init
                     (RoachesConnectReq         *message);
size_t roaches_connect_req__get_packed_size
                     (const RoachesConnectReq   *message);
size_t roaches_connect_req__pack
                     (const RoachesConnectReq   *message,
                      uint8_t             *out);
size_t roaches_connect_req__pack_to_buffer
                     (const RoachesConnectReq   *message,
                      ProtobufCBuffer     *buffer);
RoachesConnectReq *
       roaches_connect_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   roaches_connect_req__free_unpacked
                     (RoachesConnectReq *message,
                      ProtobufCAllocator *allocator);
/* RoachesConnectResp methods */
void   roaches_connect_resp__init
                     (RoachesConnectResp         *message);
size_t roaches_connect_resp__get_packed_size
                     (const RoachesConnectResp   *message);
size_t roaches_connect_resp__pack
                     (const RoachesConnectResp   *message,
                      uint8_t             *out);
size_t roaches_connect_resp__pack_to_buffer
                     (const RoachesConnectResp   *message,
                      ProtobufCBuffer     *buffer);
RoachesConnectResp *
       roaches_connect_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   roaches_connect_resp__free_unpacked
                     (RoachesConnectResp *message,
                      ProtobufCAllocator *allocator);
/* RoachesMovementReq methods */
void   roaches_movement_req__init
                     (RoachesMovementReq         *message);
size_t roaches_movement_req__get_packed_size
                     (const RoachesMovementReq   *message);
size_t roaches_movement_req__pack
                     (const RoachesMovementReq   *message,
                      uint8_t             *out);
size_t roaches_movement_req__pack_to_buffer
                     (const RoachesMovementReq   *message,
                      ProtobufCBuffer     *buffer);
RoachesMovementReq *
       roaches_movement_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   roaches_movement_req__free_unpacked
                     (RoachesMovementReq *message,
                      ProtobufCAllocator *allocator);
/* RoachesMovementResp methods */
void   roaches_movement_resp__init
                     (RoachesMovementResp         *message);
size_t roaches_movement_resp__get_packed_size
                     (const RoachesMovementResp   *message);
size_t roaches_movement_resp__pack
                     (const RoachesMovementResp   *message,
                      uint8_t             *out);
size_t roaches_movement_resp__pack_to_buffer
                     (const RoachesMovementResp   *message,
                      ProtobufCBuffer     *buffer);
RoachesMovementResp *
       roaches_movement_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   roaches_movement_resp__free_unpacked
                     (RoachesMovementResp *message,
                      ProtobufCAllocator *allocator);
/* WaspsConnectReq methods */
void   wasps_connect_req__init
                     (WaspsConnectReq         *message);
size_t wasps_connect_req__get_packed_size
                     (const WaspsConnectReq   *message);
size_t wasps_connect_req__pack
                     (const WaspsConnectReq   *message,
                      uint8_t             *out);
size_t wasps_connect_req__pack_to_buffer
                     (const WaspsConnectReq   *message,
                      ProtobufCBuffer     *buffer);
WaspsConnectReq *
       wasps_connect_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   wasps_connect_req__free_unpacked
                     (WaspsConnectReq *message,
                      ProtobufCAllocator *allocator);
/* WaspsConnectResp methods */
void   wasps_connect_resp__init
                     (WaspsConnectResp         *message);
size_t wasps_connect_resp__get_packed_size
                     (const WaspsConnectResp   *message);
size_t wasps_connect_resp__pack
                     (const WaspsConnectResp   *message,
                      uint8_t             *out);
size_t wasps_connect_resp__pack_to_buffer
                     (const WaspsConnectResp   *message,
                      ProtobufCBuffer     *buffer);
WaspsConnectResp *
       wasps_connect_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   wasps_connect_resp__free_unpacked
                     (WaspsConnectResp *message,
                      ProtobufCAllocator *allocator);
/* WaspsMovementReq methods */
void   wasps_movement_req__init
                     (WaspsMovementReq         *message);
size_t wasps_movement_req__get_packed_size
                     (const WaspsMovementReq   *message);
size_t wasps_movement_req__pack
                     (const WaspsMovementReq   *message,
                      uint8_t             *out);
size_t wasps_movement_req__pack_to_buffer
                     (const WaspsMovementReq   *message,
                      ProtobufCBuffer     *buffer);
WaspsMovementReq *
       wasps_movement_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   wasps_movement_req__free_unpacked
                     (WaspsMovementReq *message,
                      ProtobufCAllocator *allocator);
/* WaspsMovementResp methods */
void   wasps_movement_resp__init
                     (WaspsMovementResp         *message);
size_t wasps_movement_resp__get_packed_size
                     (const WaspsMovementResp   *message);
size_t wasps_movement_resp__pack
                     (const WaspsMovementResp   *message,
                      uint8_t             *out);
size_t wasps_movement_resp__pack_to_buffer
                     (const WaspsMovementResp   *message,
                      ProtobufCBuffer     *buffer);
WaspsMovementResp *
       wasps_movement_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   wasps_movement_resp__free_unpacked
                     (WaspsMovementResp *message,
                      ProtobufCAllocator *allocator);
/* LizardDisconnectReq methods */
void   lizard_disconnect_req__init
                     (LizardDisconnectReq         *message);
size_t lizard_disconnect_req__get_packed_size
                     (const LizardDisconnectReq   *message);
size_t lizard_disconnect_req__pack
                     (const LizardDisconnectReq   *message,
                      uint8_t             *out);
size_t lizard_disconnect_req__pack_to_buffer
                     (const LizardDisconnectReq   *message,
                      ProtobufCBuffer     *buffer);
LizardDisconnectReq *
       lizard_disconnect_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lizard_disconnect_req__free_unpacked
                     (LizardDisconnectReq *message,
                      ProtobufCAllocator *allocator);
/* LizardDisconnectResp methods */
void   lizard_disconnect_resp__init
                     (LizardDisconnectResp         *message);
size_t lizard_disconnect_resp__get_packed_size
                     (const LizardDisconnectResp   *message);
size_t lizard_disconnect_resp__pack
                     (const LizardDisconnectResp   *message,
                      uint8_t             *out);
size_t lizard_disconnect_resp__pack_to_buffer
                     (const LizardDisconnectResp   *message,
                      ProtobufCBuffer     *buffer);
LizardDisconnectResp *
       lizard_disconnect_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lizard_disconnect_resp__free_unpacked
                     (LizardDisconnectResp *message,
                      ProtobufCAllocator *allocator);
/* RoachesDisconnectReq methods */
void   roaches_disconnect_req__init
                     (RoachesDisconnectReq         *message);
size_t roaches_disconnect_req__get_packed_size
                     (const RoachesDisconnectReq   *message);
size_t roaches_disconnect_req__pack
                     (const RoachesDisconnectReq   *message,
                      uint8_t             *out);
size_t roaches_disconnect_req__pack_to_buffer
                     (const RoachesDisconnectReq   *message,
                      ProtobufCBuffer     *buffer);
RoachesDisconnectReq *
       roaches_disconnect_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   roaches_disconnect_req__free_unpacked
                     (RoachesDisconnectReq *message,
                      ProtobufCAllocator *allocator);
/* RoachesDisconnectResp methods */
void   roaches_disconnect_resp__init
                     (RoachesDisconnectResp         *message);
size_t roaches_disconnect_resp__get_packed_size
                     (const RoachesDisconnectResp   *message);
size_t roaches_disconnect_resp__pack
                     (const RoachesDisconnectResp   *message,
                      uint8_t             *out);
size_t roaches_disconnect_resp__pack_to_buffer
                     (const RoachesDisconnectResp   *message,
                      ProtobufCBuffer     *buffer);
RoachesDisconnectResp *
       roaches_disconnect_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   roaches_disconnect_resp__free_unpacked
                     (RoachesDisconnectResp *message,
                      ProtobufCAllocator *allocator);
/* WaspsDisconnectReq methods */
void   wasps_disconnect_req__init
                     (WaspsDisconnectReq         *message);
size_t wasps_disconnect_req__get_packed_size
                     (const WaspsDisconnectReq   *message);
size_t wasps_disconnect_req__pack
                     (const WaspsDisconnectReq   *message,
                      uint8_t             *out);
size_t wasps_disconnect_req__pack_to_buffer
                     (const WaspsDisconnectReq   *message,
                      ProtobufCBuffer     *buffer);
WaspsDisconnectReq *
       wasps_disconnect_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   wasps_disconnect_req__free_unpacked
                     (WaspsDisconnectReq *message,
                      ProtobufCAllocator *allocator);
/* WaspsDisconnectResp methods */
void   wasps_disconnect_resp__init
                     (WaspsDisconnectResp         *message);
size_t wasps_disconnect_resp__get_packed_size
                     (const WaspsDisconnectResp   *message);
size_t wasps_disconnect_resp__pack
                     (const WaspsDisconnectResp   *message,
                      uint8_t             *out);
size_t wasps_disconnect_resp__pack_to_buffer
                     (const WaspsDisconnectResp   *message,
                      ProtobufCBuffer     *buffer);
WaspsDisconnectResp *
       wasps_disconnect_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   wasps_disconnect_resp__free_unpacked
                     (WaspsDisconnectResp *message,
                      ProtobufCAllocator *allocator);
/* FieldUpdate methods */
void   field_update__init
                     (FieldUpdate         *message);
size_t field_update__get_packed_size
                     (const FieldUpdate   *message);
size_t field_update__pack
                     (const FieldUpdate   *message,
                      uint8_t             *out);
size_t field_update__pack_to_buffer
                     (const FieldUpdate   *message,
                      ProtobufCBuffer     *buffer);
FieldUpdate *
       field_update__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   field_update__free_unpacked
                     (FieldUpdate *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*LizardConnectResp_Closure)
                 (const LizardConnectResp *message,
                  void *closure_data);
typedef void (*LizardMovementReq_Closure)
                 (const LizardMovementReq *message,
                  void *closure_data);
typedef void (*LizardMovementResp_Closure)
                 (const LizardMovementResp *message,
                  void *closure_data);
typedef void (*RoachesConnectReq_Closure)
                 (const RoachesConnectReq *message,
                  void *closure_data);
typedef void (*RoachesConnectResp_Closure)
                 (const RoachesConnectResp *message,
                  void *closure_data);
typedef void (*RoachesMovementReq_Closure)
                 (const RoachesMovementReq *message,
                  void *closure_data);
typedef void (*RoachesMovementResp_Closure)
                 (const RoachesMovementResp *message,
                  void *closure_data);
typedef void (*WaspsConnectReq_Closure)
                 (const WaspsConnectReq *message,
                  void *closure_data);
typedef void (*WaspsConnectResp_Closure)
                 (const WaspsConnectResp *message,
                  void *closure_data);
typedef void (*WaspsMovementReq_Closure)
                 (const WaspsMovementReq *message,
                  void *closure_data);
typedef void (*WaspsMovementResp_Closure)
                 (const WaspsMovementResp *message,
                  void *closure_data);
typedef void (*LizardDisconnectReq_Closure)
                 (const LizardDisconnectReq *message,
                  void *closure_data);
typedef void (*LizardDisconnectResp_Closure)
                 (const LizardDisconnectResp *message,
                  void *closure_data);
typedef void (*RoachesDisconnectReq_Closure)
                 (const RoachesDisconnectReq *message,
                  void *closure_data);
typedef void (*RoachesDisconnectResp_Closure)
                 (const RoachesDisconnectResp *message,
                  void *closure_data);
typedef void (*WaspsDisconnectReq_Closure)
                 (const WaspsDisconnectReq *message,
                  void *closure_data);
typedef void (*WaspsDisconnectResp_Closure)
                 (const WaspsDisconnectResp *message,
                  void *closure_data);
typedef void (*FieldUpdate_Closure)
                 (const FieldUpdate *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    response_type__descriptor;
extern const ProtobufCEnumDescriptor    direction__descriptor;
extern const ProtobufCMessageDescriptor lizard_connect_resp__descriptor;
extern const ProtobufCMessageDescriptor lizard_movement_req__descriptor;
extern const ProtobufCMessageDescriptor lizard_movement_resp__descriptor;
extern const ProtobufCMessageDescriptor roaches_connect_req__descriptor;
extern const ProtobufCMessageDescriptor roaches_connect_resp__descriptor;
extern const ProtobufCMessageDescriptor roaches_movement_req__descriptor;
extern const ProtobufCMessageDescriptor roaches_movement_resp__descriptor;
extern const ProtobufCMessageDescriptor wasps_connect_req__descriptor;
extern const ProtobufCMessageDescriptor wasps_connect_resp__descriptor;
extern const ProtobufCMessageDescriptor wasps_movement_req__descriptor;
extern const ProtobufCMessageDescriptor wasps_movement_resp__descriptor;
extern const ProtobufCMessageDescriptor lizard_disconnect_req__descriptor;
extern const ProtobufCMessageDescriptor lizard_disconnect_resp__descriptor;
extern const ProtobufCMessageDescriptor roaches_disconnect_req__descriptor;
extern const ProtobufCMessageDescriptor roaches_disconnect_resp__descriptor;
extern const ProtobufCMessageDescriptor wasps_disconnect_req__descriptor;
extern const ProtobufCMessageDescriptor wasps_disconnect_resp__descriptor;
extern const ProtobufCMessageDescriptor field_update__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_lizardsNroachesNwasps_2eproto__INCLUDED */
